generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  firstName  String
  lastName   String
  email      String       @unique
  verified   Boolean?     @default(false)
  password   String?
  role       String       @default("user")
  products   Product[]    @relation("userProducts")
  reviews    Review[]     @relation("userReviews")
  ResetToken ResetToken[] @relation("userResetToken")

  @@map("users")
}

model Product {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  ownerId        String         @db.ObjectId
  owner          User           @relation("userProducts", fields: [ownerId], references: [id])
  reviews        Review[]       @relation("productReviews")
  rentalOptions  RentalOption[] @relation("productRentalOptions")
  specifications Specifications
  availability   Boolean
  availableDays  AvailableDays

  @@map("products")
}

model RentalOption {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  product   Product @relation("productRentalOptions", fields: [productId], references: [id])
  type      String
  priceRate Float

  @@unique([productId, type], name: "UniqueRentalTypePerProduct")
  @@map("rental_options")
}

model Review {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  text       String
  rating     Float
  reviewerId String  @db.ObjectId
  reviewer   User    @relation("userReviews", fields: [reviewerId], references: [id])
  productId  String  @db.ObjectId
  product    Product @relation("productReviews", fields: [productId], references: [id])

  @@map("reviews")
}

model ResetToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation("userResetToken", fields: [userId], references: [id])
  token     String
  timestamp DateTime

  @@map("reset_tokens")
}

type Specifications {
  brand       String
  model       String
  processor   String
  graphicCard String
  ramSize     Int
  storageSize Int
}

type AvailableDays {
  startDate DateTime
  endDate   DateTime
}
